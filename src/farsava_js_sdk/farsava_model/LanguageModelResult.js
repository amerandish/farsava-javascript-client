/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LMStatus from './LMStatus';

/**
 * The LanguageModelResult model module.
 * @module farsava_js_sdk/farsava_model/LanguageModelResult
 * @version 1.0.5
 */
class LanguageModelResult {
    /**
     * Constructs a new <code>LanguageModelResult</code>.
     * @alias module:farsava_js_sdk/farsava_model/LanguageModelResult
     */
    constructor() { 
        
        LanguageModelResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LanguageModelResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:farsava_js_sdk/farsava_model/LanguageModelResult} obj Optional instance to populate.
     * @return {module:farsava_js_sdk/farsava_model/LanguageModelResult} The populated <code>LanguageModelResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LanguageModelResult();

            if (data.hasOwnProperty('languageModelId')) {
                obj['languageModelId'] = ApiClient.convertToType(data['languageModelId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = LMStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

/**
     * Returns This is the language model id of a customized trained language model. You can train your own language models and then use them to recognize speech. Refer to [languagemodel/train](#languagemodel/train) for more info.    There are some pretrained language models which you can use.    Model | Description   ------------ | -------------   general | Best for audio content that is not one of the specific language models. This is the default language model and if you are not sure which one to use, simply use 'general'.   numbers | Best for audio content that contains only spoken numbers. For examble this language model can be used for speech enabled number input fileds.   yesno | Best for audio content that contains yes or no. For examble this language model can be used to receive confirmation from user.   country | Best for audio content that contains only spoken country. For examble this language model can be used for speech enabled input fileds.   city | Best for audio content that contains only spoken city. For examble this language model      can be used for speech enabled input fileds.   career | Best for audio content that contains only spoken career names. For examble this language model can be used for speech enabled input fileds. 
     * @return {String}
     */
    getLanguageModelId() {
        return this.languageModelId;
    }

    /**
     * Sets This is the language model id of a customized trained language model. You can train your own language models and then use them to recognize speech. Refer to [languagemodel/train](#languagemodel/train) for more info.    There are some pretrained language models which you can use.    Model | Description   ------------ | -------------   general | Best for audio content that is not one of the specific language models. This is the default language model and if you are not sure which one to use, simply use 'general'.   numbers | Best for audio content that contains only spoken numbers. For examble this language model can be used for speech enabled number input fileds.   yesno | Best for audio content that contains yes or no. For examble this language model can be used to receive confirmation from user.   country | Best for audio content that contains only spoken country. For examble this language model can be used for speech enabled input fileds.   city | Best for audio content that contains only spoken city. For examble this language model      can be used for speech enabled input fileds.   career | Best for audio content that contains only spoken career names. For examble this language model can be used for speech enabled input fileds. 
     * @param {String} languageModelId This is the language model id of a customized trained language model. You can train your own language models and then use them to recognize speech. Refer to [languagemodel/train](#languagemodel/train) for more info.    There are some pretrained language models which you can use.    Model | Description   ------------ | -------------   general | Best for audio content that is not one of the specific language models. This is the default language model and if you are not sure which one to use, simply use 'general'.   numbers | Best for audio content that contains only spoken numbers. For examble this language model can be used for speech enabled number input fileds.   yesno | Best for audio content that contains yes or no. For examble this language model can be used to receive confirmation from user.   country | Best for audio content that contains only spoken country. For examble this language model can be used for speech enabled input fileds.   city | Best for audio content that contains only spoken city. For examble this language model      can be used for speech enabled input fileds.   career | Best for audio content that contains only spoken career names. For examble this language model can be used for speech enabled input fileds. 
     */
    setLanguageModelId(languageModelId) {
        this['languageModelId'] = languageModelId;
    }
/**
     * Returns The name of the custom language model.
     * @return {String}
     */
    getName() {
        return this.name;
    }

    /**
     * Sets The name of the custom language model.
     * @param {String} name The name of the custom language model.
     */
    setName(name) {
        this['name'] = name;
    }
/**
     * @return {module:farsava_js_sdk/farsava_model/LMStatus}
     */
    getStatus() {
        return this.status;
    }

    /**
     * @param {module:farsava_js_sdk/farsava_model/LMStatus} status
     */
    setStatus(status) {
        this['status'] = status;
    }

}

/**
 * This is the language model id of a customized trained language model. You can train your own language models and then use them to recognize speech. Refer to [languagemodel/train](#languagemodel/train) for more info.    There are some pretrained language models which you can use.    Model | Description   ------------ | -------------   general | Best for audio content that is not one of the specific language models. This is the default language model and if you are not sure which one to use, simply use 'general'.   numbers | Best for audio content that contains only spoken numbers. For examble this language model can be used for speech enabled number input fileds.   yesno | Best for audio content that contains yes or no. For examble this language model can be used to receive confirmation from user.   country | Best for audio content that contains only spoken country. For examble this language model can be used for speech enabled input fileds.   city | Best for audio content that contains only spoken city. For examble this language model      can be used for speech enabled input fileds.   career | Best for audio content that contains only spoken career names. For examble this language model can be used for speech enabled input fileds. 
 * @member {String} languageModelId
 */
LanguageModelResult.prototype['languageModelId'] = undefined;

/**
 * The name of the custom language model.
 * @member {String} name
 */
LanguageModelResult.prototype['name'] = undefined;

/**
 * @member {module:farsava_js_sdk/farsava_model/LMStatus} status
 */
LanguageModelResult.prototype['status'] = undefined;






export default LanguageModelResult;

